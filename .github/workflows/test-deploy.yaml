name: 'Test-Deploy'

on:
  pull_request:
  push:

jobs:

  pre-commit:

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: pre-commit/action@v3.0.1

  test-and-build:
    runs-on: ubuntu-22.04
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # I prefer to use my Makefile to test the  commands instead of calling uv actions.

      - name: Restore cache venv
        uses: actions/cache/restore@v4
        with:
          path: |
            .venv
            ~/.cache/uv

          key: ${{ runner.os }}-venv-${{ hashFiles('uv.lock') }}

      - name: Install Python dependencies
        shell: bash
        run: |
          cp .env.example .env
          make install-uv
          make install-dev


      - name: Save cache venv
        uses: actions/cache/save@v4
        with:
          path: |
            .venv
            ~/.cache/uv

          key: ${{ runner.os }}-venv-${{ hashFiles('uv.lock') }}

      - name: Restore cache Ollama models
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.ollama/
            /usr/local/bin/ollama
          key: ${{ runner.os }}-ollama-models-${{ hashFiles('.env.example') }}


      - name: Install and run ollama
        shell: bash
        run: |
          make download-ollama-models
          make run-ollama &

      - name: Save cache Ollama models
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.ollama/
            /usr/local/bin/ollama
          key: ${{ runner.os }}-ollama-models-${{ hashFiles('.env.example') }}

      - name: Run tests
        shell: bash
        run: |
          make test
  test-docker-compose:
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: copy .env
        shell: bash
        run: |
          cp .env.example .env
      - uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "./docker-compose.yml"

  deploy-Github-Pages:
    # Add a dependency to the build job
    needs: [pre-commit, test-and-build]
    if: ${{ needs.pre-commit.result == 'success' && needs.test-and-build.result == 'success' && github.ref == 'refs/heads/main'}}

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: write

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python dependencies
        shell: bash
        run: |
          make install-uv
          make install-dev

      - name: Deploy Github Pages
        shell: bash
        run: |
          make deploy-doc-gh
